document.addEventListener('DOMContentLoaded', function() {
    const linkPreviews = document.querySelectorAll('.link-preview');
    const pageViewers = document.querySelectorAll('.page-viewer');

    linkPreviews.forEach(preview => {
        preview.addEventListener('click', function() {
            const topic = this.dataset.topic;
            const viewerId = topic + '-viewer';
            const viewer = document.getElementById(viewerId);

            if (viewer) {
                viewer.style.display = 'block';
                let currentPage = 1;
                const totalPages = parseInt(viewer.dataset.totalPages);

                const pages = viewer.querySelectorAll('.page');
                const pageCounter = document.createElement('div');
                pageCounter.className = 'page-counter';
                viewer.prepend(pageCounter); // Add counter at the top

                function updatePageDisplay() {
                    pages.forEach(page => {
                        page.style.display = 'none';
                    });
                    const currentPageElement = viewer.querySelector(`.page[data-page-number="${currentPage}"]`);
                    if (currentPageElement) {
                        currentPageElement.style.display = 'block';
                    }
                    pageCounter.textContent = `${currentPage} / ${totalPages}`;
                }

                updatePageDisplay();

                // Navigation Buttons
                const navigation = document.createElement('div');
                navigation.className = 'page-navigation';
                const prevButton = document.createElement('button');
                prevButton.textContent = 'Previous';
                const nextButton = document.createElement('button');
                nextButton.textContent = 'Next';
                navigation.appendChild(prevButton);
                navigation.appendChild(nextButton);
                viewer.appendChild(navigation);

                prevButton.addEventListener('click', function() {
                    if (currentPage > 1) {
                        currentPage--;
                        updatePageDisplay();
                    }
                });

                nextButton.addEventListener('click', function() {
                    if (currentPage < totalPages) {
                        currentPage++;
                        updatePageDisplay();
                    }
                });

                // Swipe Detection (Simplified)
                let startX;
                viewer.addEventListener('touchstart', function(e) {
                    startX = e.touches[0].clientX;
                });

                viewer.addEventListener('touchmove', function(e) {
                    const currentX = e.touches[0].clientX;
                    const diffX = currentX - startX;

                    if (Math.abs(diffX) > 50) { // Adjust threshold as needed
                        if (diffX > 0) {
                            // Swipe Right
                            if (currentPage < totalPages) {
                                currentPage++;
                                updatePageDisplay();
                            }
                        } else {
                            // Swipe Left
                            if (currentPage > 1) {
                                currentPage--;
                                updatePageDisplay();
                            }
                        }
                        startX = currentX; // Reset startX for next swipe
                    }
                });
            }
        });
    });
});
